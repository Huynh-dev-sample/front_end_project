{"ast":null,"code":"import _regeneratorRuntime from\"D:/external_project/front_end_project/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/external_project/front_end_project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/external_project/front_end_project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/import React,{useState}from\"react\";// reactstrap components\nimport{Button,Card,CardHeader,CardBody,FormGroup,Form,Input,InputGroupAddon,InputGroupText,InputGroup,Row,Col}from\"reactstrap\";import{confirmReset,forgotPassword,login}from\"../../network/ApiAxios\";import Toast from\"react-bootstrap/Toast\";import{useParams}from\"react-router-dom\";var ConfirmPassword=function ConfirmPassword(props){var _useParams=useParams(),id=_useParams.id;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var confirm=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(password!==confirmPassword)){_context.next=3;break;}setError(\"Passwords have to match\");return _context.abrupt(\"return\");case 3:_context.next=5;return confirmReset(id,password);case 5:response=_context.sent;data=response.data;if(data.success){props.history.push(\"/auth/reset-success\");}else{setError(data.msg);}case 8:case\"end\":return _context.stop();}},_callee);}));return function confirm(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{lg:\"5\",md:\"7\"},/*#__PURE__*/React.createElement(Card,{className:\"bg-secondary shadow border-0\"},/*#__PURE__*/React.createElement(CardBody,{className:\"px-lg-5 py-lg-5\"},/*#__PURE__*/React.createElement(Form,{role:\"form\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputGroup,{className:\"input-group-alternative\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ni ni-lock-circle-open\"}))),/*#__PURE__*/React.createElement(Input,{placeholder:\"Password\",type:\"password\",autoComplete:\"new-password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}}))),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputGroup,{className:\"input-group-alternative\"},/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"prepend\"},/*#__PURE__*/React.createElement(InputGroupText,null,/*#__PURE__*/React.createElement(\"i\",{className:\"ni ni-lock-circle-open\"}))),/*#__PURE__*/React.createElement(Input,{placeholder:\"Confirm Password\",type:\"password\",autoComplete:\"new-password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}}))),error?/*#__PURE__*/React.createElement(\"div\",{className:\"text-muted font-italic\"},/*#__PURE__*/React.createElement(\"small\",null,\"error:\",\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-red font-weight-700\"},error))):null,/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{className:\"my-4\",color:\"primary\",type:\"button\",onClick:confirm},\"Reset Password\")))))));};export default ConfirmPassword;","map":{"version":3,"names":["React","useState","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","confirmReset","forgotPassword","login","Toast","useParams","ConfirmPassword","props","_useParams","id","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","error","setError","confirm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","abrupt","sent","success","history","push","msg","stop","apply","arguments","createElement","Fragment","lg","md","className","role","addonType","placeholder","type","autoComplete","value","onChange","e","target","color","onClick"],"sources":["D:/external_project/front_end_project/src/views/examples/ConfirmPassword.js"],"sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, {useState} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport {confirmReset, forgotPassword, login} from \"../../network/ApiAxios\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst ConfirmPassword = props => {\r\n\r\n    const {id} = useParams();\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const confirm = async () => {\r\n        if (password !== confirmPassword) {\r\n            setError(\"Passwords have to match\");\r\n            return;\r\n        }\r\n        const response = await confirmReset(id, password);\r\n        const {data} = response;\r\n        if (data.success) {\r\n            props.history.push(\"/auth/reset-success\");\r\n        } else {\r\n            setError(data.msg);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Col lg=\"5\" md=\"7\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <Form role=\"form\">\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\r\n                                           onChange={e => setPassword(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\r\n                                           onChange={e => setConfirmPassword(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            {error ?\r\n                                <div className=\"text-muted font-italic\">\r\n                                    <small>\r\n                                        error:{\" \"}\r\n                                        <span className=\"text-red font-weight-700\">{error}</span>\r\n                                    </small>\r\n                                </div> : null }\r\n                            <div className=\"text-center\">\r\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={confirm}>\r\n                                    Reset Password\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ConfirmPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}